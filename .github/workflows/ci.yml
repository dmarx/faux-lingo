name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install base package
      run: |
        python -m pip install --upgrade pip
        echo "::group::Install Timing - Base Package"
        time pip install -e .
        echo "::endgroup::"
        
    - name: Install dev dependencies
      run: |
        echo "::group::Install Timing - Dev Dependencies"
        time pip install -e ".[dev]"
        echo "::endgroup::"
        
    - name: Run formatters and linters
      run: |
        echo "Running black..."
        black .
        echo "Running isort..."
        isort .
        echo "Running mypy and applying fixes..."
        mypy faux_lingo --pretty --show-error-codes --apply || true
        
    - name: Commit formatting changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git diff --quiet || (git add . && git commit -m "Apply automatic formatting and type fixes" && git push)
        
    - name: Run tests
      run: |
        pytest --cov
        
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3

  torch-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-torch-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-torch-
          
    - name: Install package with PyTorch
      run: |
        python -m pip install --upgrade pip
        echo "::group::Install Timing - Full Package with PyTorch"
        time pip install -e ".[all]"
        echo "::endgroup::"
        
    - name: Run PyTorch-specific tests
      run: |
        pytest tests/test_torch_*.py
